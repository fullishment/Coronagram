<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="crng">
	<select id="getPostList" parameterType="hashmap" resultType="hashmap">
		SELECT C.WRITING_NO, C.WRITER_NO, C.CON, M.M_NO ,M.M_NM, M.IMG_ADR, M.NICK_NM,CAA.FILE_ADRS,CS.SET1,NVL2(WCT.NICK_NM,WCT.NICK_NM,0) AS CMT_NICK,
        NVL(L.LC,0) AS LC, NVL(CN.CCNT,0) AS CCNT, NVL(LX.LEX,0) AS LEX
		,TO_CHAR(C.DT, 'YYYY/MM/DD HH24:MI:SS') AS DT
		FROM CRNG C
		    INNER JOIN M M
		    			  ON C.WRITER_NO = M.M_NO
		    INNER JOIN   (SELECT CA.WRITING_NO,SUBSTR(MAX(SYS_CONNECT_BY_PATH(FILE_ADR, ',')), 2) AS FILE_ADRS
		                    FROM (SELECT WRITING_NO, FILE_ADR, ROW_NUMBER() OVER(PARTITION BY WRITING_NO ORDER BY ATTC_NO ASC) AS RNUM
		                            FROM CRNG_ATTC
		                            ORDER BY WRITING_NO DESC) CA
                            START WITH CA.RNUM = 1
                            CONNECT BY PRIOR CA.RNUM = CA.RNUM - 1
                            AND PRIOR CA.WRITING_NO = CA.WRITING_NO
                            GROUP BY CA.WRITING_NO) CAA
                            ON CAA.WRITING_NO=C.WRITING_NO
            INNER JOIN (SELECT SM_NO,SET1 FROM CRNG_SETTING) CS
                            ON C.WRITER_NO = CS.SM_NO
            LEFT OUTER JOIN ( SELECT WCC.WRITING_NO,WCC.NICK_NM,WCC.LK_DT FROM
                            (SELECT LK.WRITING_NO,MM.NICK_NM,LK.LK_DT,
                            ROW_NUMBER() OVER(PARTITION BY WRITING_NO ORDER BY WRITING_NO) AS RNUM
                            FROM LK LK
                                     LEFT OUTER JOIN M MM
                                        ON LK.USER_NO = MM.M_NO
                            ORDER BY LK.WRITING_NO,LK.LK_DT) WCC
                            WHERE WCC.RNUM =1
                            ) WCT
                            ON C.WRITING_NO = WCT.WRITING_NO                               
            LEFT OUTER JOIN (SELECT WRITING_NO, NVL(COUNT(*),0) AS LC FROM LK
                            GROUP BY WRITING_NO) L
                            ON C.WRITING_NO = L.WRITING_NO
            LEFT OUTER JOIN (SELECT WRITING_NO, NVL(COUNT(*),0) AS CCNT FROM CRNG_CMT
                            WHERE DEL =1
                            GROUP BY WRITING_NO
                            ) CN
                            ON C.WRITING_no = CN.WRITING_NO
            LEFT OUTER JOIN (SELECT WRITING_NO,USER_NO,NVL(COUNT(*),0) AS LEX FROM LK
                            GROUP BY WRITING_NO,USER_NO) LX
                            ON C.WRITING_NO = LX.WRITING_NO
                            AND LX.USER_NO = #{m_no}
			WHERE C.DEL = 1
            AND C.WRITER_NO IN (SELECT RP_USER FROM FOLLOW WHERE RQ_USER = #{m_no})
			ORDER BY C.DT DESC
	</select>
	<select id="getPostCmt" parameterType="hashmap" resultType="hashmap">
		SELECT CC.CMT_NO, CC.WRITING_NO, CC.CMT_WRITER_NO, CC.NICK_NM, CC.CMT_CON, CC.DT, CC.DEL
		FROM (SELECT CM.CMT_NO, CM.WRITING_NO, CM.CMT_WRITER_NO, M.NICK_NM, CM.CMT_CON, CM.DEL,CM.DT,
              ROW_NUMBER() OVER(PARTITION BY CM.WRITING_NO ORDER BY CM.CMT_NO DESC) AS RNUM
                        FROM CRNG_CMT CM 
                        INNER JOIN M M
                                 ON CM.CMT_WRITER_NO = M.M_NO
        				 WHERE CM.DEL = 1                        
                         ) CC 
		WHERE CC.RNUM BETWEEN 1 AND 2
		AND CC.DEL = 1
	</select>
	<insert id="aHeart" parameterType="hashmap">
		INSERT INTO LK(USER_NO,WRITING_NO) 
			VALUES (#{m_no}, #{writingNo})
	</insert> 
	<delete id="dHeart" parameterType="hashmap">
		DELETE FROM LK 
			WHERE USER_NO = #{m_no} 
			AND WRITING_NO = #{writingNo}
	</delete>	
	<insert id="addPostCmt" parameterType="hashmap">
		INSERT INTO CRNG_CMT(WRITING_NO, CMT_WRITER_NO, CMT_CON)
        	VALUES(#{writingNo}, #{m_no}, #{cmt_con})
	</insert>
	<select id="getListFollow" parameterType="hashmap" resultType="hashmap">
		SELECT M.M_NO,M.NICK_NM,M.IMG_ADR
        	FROM M M
            INNER JOIN FOLLOW F
                ON M.M_NO = F.RP_USER
                AND RQ_USER = #{m_no}
            ORDER BY F.FOLLOW_DT DESC
	</select>
	<select id="getNotFollow" parameterType="hashmap" resultType="hashmap">
		SELECT M.M_NO,M.NICK_NM, M.IMG_ADR,RANK() OVER(ORDER BY M_NO DESC) FROM 
		    (SELECT * FROM M 
		    	ORDER BY DBMS_RANDOM.RANDOM
		    )M
		    WHERE M_NO NOT IN (SELECT RP_USER FROM FOLLOW WHERE RQ_USER = #{m_no})
		    	AND M_NO != #{m_no}
	    	<![CDATA[
	    		AND rownum < 6
	    	]]>
	</select>	
	<insert id="FollowAdd" parameterType="hashmap">
		INSERT INTO FOLLOW(RQ_USER,RP_USER) 
			SELECT #{m_no}, M_NO FROM M WHERE M_NO = #{m_no2}
	</insert>
	<select id="ModalInfo" parameterType="hashmap" resultType="hashmap">
	 	SELECT M.M_NO, M.M_NM, M.NICK_NM, M.IMG_ADR, 
	        NVL(W.WC,0) AS WC, NVL(P.PC,0) AS PC, NVL(Q.QC,0) AS QC
	        FROM M M
	        LEFT OUTER JOIN (SELECT WRITER_NO, NVL(COUNT(*),0) AS WC
	                            FROM CRNG 
	                            GROUP BY WRITER_NO) W
	                            ON M.M_NO = W.WRITER_NO
	        LEFT OUTER JOIN (SELECT RP_USER, NVL(COUNT(*),0) AS PC
	                            FROM FOLLOW
	                            GROUP BY RP_USER) P
	                            ON M.M_NO = P.RP_USER
	        LEFT OUTER JOIN (SELECT RQ_USER, NVL(COUNT(*),0) AS QC
	                            FROM FOLLOW
	                            GROUP BY RQ_USER) Q
	                            ON M.M_NO = Q.RQ_USER
	        WHERE M.M_NO = #{m_no3}
	</select>
	<select id="getMimg" parameterType="hashmap" resultType="hashmap">
		SELECT I.M_NO,I.FILE_ADR,I.DT,I.RNUM 
            FROM (SELECT M.M_NO, CA.FILE_ADR, C.DT
            ,ROW_NUMBER() OVER(PARTITION BY M.M_NO ORDER BY C.DT DESC) AS RNUM
            FROM CRNG C  
            INNER JOIN M M
                        ON C.WRITER_NO = M.M_NO
            INNER JOIN (SELECT WRITING_NO, FILE_ADR,
                        RANK() OVER(PARTITION BY WRITING_NO ORDER BY ATTC_NO ASC) AS RNK
                        FROM CRNG_ATTC ) CA
                        ON C.WRITING_NO = CA.WRITING_NO
                        AND CA.RNK = 1
            WHERE C.DEL = 1 
            AND M.M_NO = #{m_no3}) I
            <![CDATA[
			WHERE RNUM<=3
			]]>
	</select>
	<delete id="followDel" parameterType="hashmap">
		DELETE FROM FOLLOW WHERE RQ_USER = #{m_no} AND RP_USER = #{m_no2}
	</delete>
	<select id="getLkList" parameterType="hashmap" resultType="hashmap">
		SELECT M.M_NO, M.NICK_NM, M.IMG_ADR 
                FROM M M
                INNER JOIN LK L
                    ON M.M_NO = L.USER_NO
       			WHERE WRITING_NO = #{writing_no2}
	</select>
	<select id="getLastAcctNum" parameterType="hashmap" resultType="hashmap">
		SELECT LAST_NUMBER 
      			FROM USER_SEQUENCES 
      			WHERE SEQUENCE_NAME = 'WRITING_SEQ'
	</select>
	<insert id="postAdd" parameterType="hashmap">
		INSERT INTO CRNG(WRITER_NO,CON) 
				VALUES (#{m_no},#{con})
	</insert>
	<insert id="postAcctAdd" parameterType="hashmap">
		INSERT INTO CRNG_ATTC(ATTC_NO,WRITING_NO,FILE_ADR)
				VALUES(ACCT_SEQ.NEXTVAL,#{last_no},#{CrngImgFile})
	</insert>
	<select id="getLkMList" parameterType="hashmap" resultType="hashmap">
		SELECT M.M_NO, M.NICK_NM, M.IMG_ADR , NVL(FT.CNTF,0) AS CNTF
    		FROM LK L
        	INNER JOIN M M
            ON L.USER_NO = M.M_NO
        	LEFT OUTER JOIN (SELECT RQ_USER,RP_USER, NVL(COUNT(*),0) AS CNTF 
                                FROM FOLLOW
                                WHERE RQ_USER = #{m_no4}           
                                AND RQ_USER != RP_USER
                                GROUP BY RQ_USER,RP_USER
                        )FT
                        ON FT.RP_USER = M.M_NO
        	WHERE L.WRITING_NO = #{writingNo3}
        	ORDER BY DECODE(M.M_NO,#{m_no4},1),
        	L.LK_DT DESC
	</select>
	<update id="delCmt" parameterType="hashmap">
		UPDATE CRNG_CMT SET DEL = 0
            WHERE CMT_NO = #{cmtNo}
	</update>
</mapper>